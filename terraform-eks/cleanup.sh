#!/bin/bash
set -e  # Para interromper a execu√ß√£o em caso de erro cr√≠tico

AWS_REGION="us-east-1"
AWS_PROFILE="default"

echo "üöÄ Iniciando a remo√ß√£o dos containers e infraestrutura na AWS..."

# 1Ô∏è‚É£ **Verificar Conex√£o com o Cluster (EKS)**
echo "üîç Verificando conex√£o com o cluster..."
if ! kubectl get nodes &>/dev/null; then
    echo "‚ö†Ô∏è Aviso: Cluster inacess√≠vel! Continuando o cleanup..."
else
    echo "‚úÖ Cluster acess√≠vel! Continuando a remo√ß√£o..."
fi

# 2Ô∏è‚É£ **Remover Deployments e Servi√ßos do Kubernetes (EKS)**
echo "üõë Removendo deployments do Kubernetes..."
kubectl delete deployment auth-php --ignore-not-found=true || echo "‚ö†Ô∏è Aviso: Erro ao remover auth-php"
kubectl delete deployment processing-php --ignore-not-found=true || echo "‚ö†Ô∏è Aviso: Erro ao remover processing-php"

echo "üõë Removendo servi√ßos do Kubernetes..."
kubectl delete svc auth-php --ignore-not-found=true || echo "‚ö†Ô∏è Aviso: Erro ao remover servi√ßo auth-php"
kubectl delete svc processing-php --ignore-not-found=true || echo "‚ö†Ô∏è Aviso: Erro ao remover servi√ßo processing-php"

echo "üóëÔ∏è Limpando volumes n√£o utilizados..."
kubectl delete pvc --all --ignore-not-found=true || echo "‚ö†Ô∏è Nenhum volume persistente encontrado"

echo "‚úÖ Todos os recursos do Kubernetes foram removidos!"

# 3Ô∏è‚É£ **Remover Imagens do AWS ECR**
echo "üóëÔ∏è Removendo imagens do ECR..."

REPO_AUTH=$(aws ecr describe-repositories --query "repositories[?repositoryName=='auth-php'].repositoryName" --output text --profile $AWS_PROFILE || echo "")
REPO_PROCESS=$(aws ecr describe-repositories --query "repositories[?repositoryName=='processing-php'].repositoryName" --output text --profile $AWS_PROFILE || echo "")

if [[ -n "$REPO_AUTH" ]]; then
    echo "üî• Apagando todas as imagens do reposit√≥rio auth-php..."
    IMAGES=$(aws ecr list-images --repository-name auth-php --query 'imageIds[*]' --output json --profile $AWS_PROFILE)
    if [[ "$IMAGES" != "[]" ]]; then
        aws ecr batch-delete-image --repository-name auth-php --image-ids "$IMAGES" --region $AWS_REGION --profile $AWS_PROFILE || echo "‚ö†Ô∏è Nenhuma imagem encontrada em auth-php!"
    else
        echo "‚ö†Ô∏è Nenhuma imagem encontrada em auth-php!"
    fi
else
    echo "‚ö†Ô∏è Reposit√≥rio auth-php n√£o encontrado!"
fi

if [[ -n "$REPO_PROCESS" ]]; then
    echo "üî• Apagando todas as imagens do reposit√≥rio processing-php..."
    IMAGES=$(aws ecr list-images --repository-name processing-php --query 'imageIds[*]' --output json --profile $AWS_PROFILE)
    if [[ "$IMAGES" != "[]" ]]; then
        aws ecr batch-delete-image --repository-name processing-php --image-ids "$IMAGES" --region $AWS_REGION --profile $AWS_PROFILE || echo "‚ö†Ô∏è Nenhuma imagem encontrada em processing-php!"
    else
        echo "‚ö†Ô∏è Nenhuma imagem encontrada em processing-php!"
    fi
else
    echo "‚ö†Ô∏è Reposit√≥rio processing-php n√£o encontrado!"
fi

echo "‚úÖ Todas as imagens do ECR foram removidas!"

# 4Ô∏è‚É£ **Destruir a Infraestrutura com Terraform**
echo "‚ö†Ô∏è ATEN√á√ÉO: Iniciando destrui√ß√£o da infraestrutura Terraform..."

if [[ -d "terraform-eks" ]]; then
    cd terraform-eks
    terraform destroy -auto-approve || echo "‚ö†Ô∏è Aviso: Erro ao destruir infraestrutura Terraform!"
    cd ..
else
    echo "‚ùå Erro: Diret√≥rio terraform-eks n√£o encontrado! Pulando destrui√ß√£o."
fi

echo "‚úÖ Infraestrutura destru√≠da com sucesso!"
echo "üéâ Cleanup completo! Todos os recursos foram removidos."
